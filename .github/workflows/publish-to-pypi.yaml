# This workflow will build the package, and publish it on test-pypi and pypi (if tagged)
# https://packaging.python.org/en/latest/guides/publishing-package-distribution-releases-using-github-actions-ci-cd-workflows/

name: Release 🐍 📦 on PyPI


on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]


jobs:
  build:
    name: Build distribution 📦
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4
    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: "3.x"
    - name: Install pypa/build
      run: |
        python3 -m pip install build --user
    - name: Build a binary wheel and a source tarball
      run: |
        python3 -m build
    - name: Store the distribution packages
      uses: actions/upload-artifact@v3
      with:
        name: python-package-distributions
        path: dist/


  publish-to-pypi:
    name: Publish 🐍 📦 to PyPI
    if: startsWith(github.ref, 'refs/tags/')  # only publish to PyPI on tag pushes
    needs:
    - build
    runs-on: ubuntu-latest
    environment:
      name: pypi
      url: https://pypi.org/p/chuchichaestli
    permissions:
      id-token: write  # IMPORTANT: mandatory for trusted publishing

    steps:
    - name: Download 📦
      uses: actions/download-artifact@v3
      with:
        name: python-package-distributions
        path: dist/
    - name: Upload 📦 to PyPI
      uses: pypa/gh-action-pypi-publish@release/v1


  github-release:
    name: |
      Sign the 🐍 📦 with Sigstore and upload them to GitHub Release
    needs:
    - publish-to-pypi
    runs-on: ubuntu-latest

    permissions:
      contents: write  # IMPORTANT: mandatory for making GitHub Releases
      id-token: write  # IMPORTANT: mandatory for sigstore

    steps:
    - name: Download 📦
      uses: actions/download-artifact@v3
      with:
        name: python-package-distributions
        path: dist/
    - name: Sign 📦 with Sigstore
      uses: sigstore/gh-action-sigstore-python@v2.1.1
      with:
        inputs: |-
          ./dist/*.tar.gz
          ./dist/*.whl
    - name: Create GitHub Release
      env:
        GITHUB_TOKEN: ${{ github.token }}
      run: |-
        gh release create '${{ github.ref_name }}'
        --repo '${{ github.repository }}'
        --notes ""
    - name: Upload artifact signatures to GitHub Release
      env:
        GITHUB_TOKEN: ${{ github.token }}
      # Upload to GitHub Release using the `gh` CLI.
      # `dist/` contains the built packages, and the
      # sigstore-produced signatures and certificates.
      run: |-
        gh release upload '${{ github.ref_name }}' dist/**
        --repo '${{ github.repository }}'


  publish-to-testpypi:
    name: Publish 🐍 📦 to TestPyPI
    if: ${{ ! startsWith(github.ref, 'refs/tags/') && github.event.pull_request.merged == false }}
    needs:
    - build
    runs-on: ubuntu-latest

    environment:
      name: testpypi
      url: https://test.pypi.org/p/chuchichaestli

    permissions:
      id-token: write  # IMPORTANT: mandatory for trusted publishing

    steps:
    - name: Download 📦
      uses: actions/download-artifact@v3
      with:
        name: python-package-distributions
        path: dist/
    - name: Upload 📦 to TestPyPI
      uses: pypa/gh-action-pypi-publish@release/v1
      with:
        skip-existing: true
        repository-url: https://test.pypi.org/legacy/


  version-bump-dev:
    name: Dev version bump ↗️
    needs:
    - publish-to-testpypi
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4
    - name: Install hatch
      run: |
        python3 -m pip install hatch --user
    - name: Bump version
      run: |
        git config --global user.name 'autobump[bot]'
        git config --global user.email 'autobump[bot]@chuchichaestli.dev'
        VERSION=`hatch version`
        hatch version dev
        NEW_VERSION=`hatch version`
        git add src/chuchichaestli/__about__.py
        git commit -m "Bump version: $VERSION → $NEW_VERSION"
        git push


  version-bump-release:
    name: Release version bump ⬆️
    needs:
    - publish-to-pypi
    if: github.event_name == 'push' || github.event.pull_request.merged == true
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4
    - name: Install hatch
      run: |
        python3 -m pip install hatch --user
    - name: Bump version
      run: |
        git config --global user.name 'autobump[bot]'
        git config --global user.email 'autobump[bot]@chuchichaestli.dev'
        VERSION=`hatch version`
        hatch version major
        NEW_VERSION=`hatch version`
        git add src/chuchichaestli/__about__.py
        git commit -m "Bump version: $VERSION → $NEW_VERSION"
        git push
