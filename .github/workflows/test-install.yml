# This worflow will install the package 📦 with dependecies 👽️, run linting 🚨,
# and pytests 🧪 on a variety of Python 🐍 versions
# For more information see:
# https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-python

name : Test install on 🐍

on:
  workflow_call:
    inputs:
      versions:
        description: "Test the installation on these Python versions"
        type: string
        default: '["3.10", "3.11", "3.12"]'
        required: false
      lint:
        description: "Run linting using ruff"
        type: boolean
        default: true
        required: false
      pytest:
        description: "Run package unit tests using pytest"
        type: boolean
        default: true
        required: false
      artifact-name:
        description: "Artifact base name of the pytest results"
        type: string
        default: "pytest-results"
        required: false

jobs:
  test-install-python-version:

    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        python-version: ${{ fromJSON(inputs.versions) }}

    steps:
      - uses: actions/checkout@v4

      - name: Set up 🐍 ${{ matrix.python-version }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install 📦 and 👽️
        run: |
          python -m pip install --upgrade pip
          python -m pip install .[dev]

      - name: 🚨 with ruff
        if: ${{ inputs.lint }}
        run: |
          # stop the build if there are Python syntax errors or undefined names
          ruff check . --select=E9,F63,F7,F82 --output-format=github
          # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
          ruff check . --extend-select=D,UP --line-length=127 --output-format=github --exit-zero

      - name: 🧪 with pytest
        if: ${{ inputs.pytest }}
        run: |
          pytest --junitxml=junit/${{ inputs.artifact-name }}-${{ matrix.python-version }}.xml

      - name: 🗃️ pytest artifacts
        if: ${{ inputs.pytest }}
        uses: actions/upload-artifact@v4
        with:
          name: ${{ inputs.artifact-name }}-${{ matrix.python-version }}
          path: ./junit/${{ inputs.artifact-name }}-${{ matrix.python-version }}.xml
